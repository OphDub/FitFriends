// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CONTROL should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        action=""
>
        <input
                name="firstName"
                onChange={[Function]}
                placeholder="First Name"
                type="text"
                value=""
        />
        <input
                name="lastName"
                onChange={[Function]}
                placeholder="Last Name"
                type="text"
                value=""
        />
        <input
                name="userName"
                onChange={[Function]}
                placeholder="Username"
                type="text"
                value=""
        />
        <input
                name="userEmail"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
        />
        <input
                name="userPass"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
        />
        <button>
                Sign Up
        </button>
</form>,
      "className": "SignUp",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "",
        "children": Array [
          <input
            name="firstName"
            onChange={[Function]}
            placeholder="First Name"
            type="text"
            value=""
/>,
          <input
            name="lastName"
            onChange={[Function]}
            placeholder="Last Name"
            type="text"
            value=""
/>,
          <input
            name="userName"
            onChange={[Function]}
            placeholder="Username"
            type="text"
            value=""
/>,
          <input
            name="userEmail"
            onChange={[Function]}
            placeholder="Email"
            type="text"
            value=""
/>,
          <input
            name="userPass"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
/>,
          <button>
            Sign Up
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "firstName",
            "onChange": [Function],
            "placeholder": "First Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "lastName",
            "onChange": [Function],
            "placeholder": "Last Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "userName",
            "onChange": [Function],
            "placeholder": "Username",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "userEmail",
            "onChange": [Function],
            "placeholder": "Email",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "userPass",
            "onChange": [Function],
            "placeholder": "Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign Up",
          },
          "ref": null,
          "rendered": "Sign Up",
          "type": "button",
        },
      ],
      "type": "form",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action=""
>
          <input
                    name="firstName"
                    onChange={[Function]}
                    placeholder="First Name"
                    type="text"
                    value=""
          />
          <input
                    name="lastName"
                    onChange={[Function]}
                    placeholder="Last Name"
                    type="text"
                    value=""
          />
          <input
                    name="userName"
                    onChange={[Function]}
                    placeholder="Username"
                    type="text"
                    value=""
          />
          <input
                    name="userEmail"
                    onChange={[Function]}
                    placeholder="Email"
                    type="text"
                    value=""
          />
          <input
                    name="userPass"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
          />
          <button>
                    Sign Up
          </button>
</form>,
        "className": "SignUp",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "",
          "children": Array [
            <input
              name="firstName"
              onChange={[Function]}
              placeholder="First Name"
              type="text"
              value=""
/>,
            <input
              name="lastName"
              onChange={[Function]}
              placeholder="Last Name"
              type="text"
              value=""
/>,
            <input
              name="userName"
              onChange={[Function]}
              placeholder="Username"
              type="text"
              value=""
/>,
            <input
              name="userEmail"
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
/>,
            <input
              name="userPass"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
/>,
            <button>
              Sign Up
</button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "firstName",
              "onChange": [Function],
              "placeholder": "First Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "lastName",
              "onChange": [Function],
              "placeholder": "Last Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "userName",
              "onChange": [Function],
              "placeholder": "Username",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "userEmail",
              "onChange": [Function],
              "placeholder": "Email",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "userPass",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign Up",
            },
            "ref": null,
            "rendered": "Sign Up",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
