// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SIGNUP should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp
    signup={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="form-background"
>
        <form
                className="SignUp-form"
        >
                <label
                        htmlFor="userEmail"
                >
                        <span>
                                Email: 
                        </span>
                        <input
                                name="userEmail"
                                onChange={[Function]}
                                placeholder="Email"
                                type="email"
                                value=""
                        />
                </label>
                <label
                        htmlFor="userPass1"
                >
                        <span>
                                Password: 
                        </span>
                        <input
                                name="userPass1"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                        />
                </label>
                <label
                        htmlFor="userPass2"
                >
                        <span>
                                Confirm Password: 
                        </span>
                        <input
                                name="userPass2"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                        />
                </label>
                <button
                        className="signup-btn"
                        onClick={[Function]}
                >
                        <h3>
                                Sign Up
                        </h3>
                </button>
        </form>
        <div
                className="signup-error"
        >
                <h5
                        className="signup-error-msg"
                />
        </div>
        <div
                className="signup-goback"
        >
                <h5>
                        Already have an account?
                </h5>
                <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/login"
                >
                        <button
                                className="signup-btn"
                        >
                                Go to Login
                        </button>
                </NavLink>
        </div>
</div>,
      "className": "SignUp",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="SignUp-form"
>
            <label
                        htmlFor="userEmail"
            >
                        <span>
                                    Email: 
                        </span>
                        <input
                                    name="userEmail"
                                    onChange={[Function]}
                                    placeholder="Email"
                                    type="email"
                                    value=""
                        />
            </label>
            <label
                        htmlFor="userPass1"
            >
                        <span>
                                    Password: 
                        </span>
                        <input
                                    name="userPass1"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                        />
            </label>
            <label
                        htmlFor="userPass2"
            >
                        <span>
                                    Confirm Password: 
                        </span>
                        <input
                                    name="userPass2"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                        />
            </label>
            <button
                        className="signup-btn"
                        onClick={[Function]}
            >
                        <h3>
                                    Sign Up
                        </h3>
            </button>
</form>,
          <div
            className="signup-error"
>
            <h5
                        className="signup-error-msg"
            />
</div>,
          <div
            className="signup-goback"
>
            <h5>
                        Already have an account?
            </h5>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/login"
            >
                        <button
                                    className="signup-btn"
                        >
                                    Go to Login
                        </button>
            </NavLink>
</div>,
        ],
        "className": "form-background",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="userEmail"
>
                <span>
                                Email: 
                </span>
                <input
                                name="userEmail"
                                onChange={[Function]}
                                placeholder="Email"
                                type="email"
                                value=""
                />
</label>,
              <label
                htmlFor="userPass1"
>
                <span>
                                Password: 
                </span>
                <input
                                name="userPass1"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                />
</label>,
              <label
                htmlFor="userPass2"
>
                <span>
                                Confirm Password: 
                </span>
                <input
                                name="userPass2"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                />
</label>,
              <button
                className="signup-btn"
                onClick={[Function]}
>
                <h3>
                                Sign Up
                </h3>
</button>,
            ],
            "className": "SignUp-form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    Email: 
</span>,
                  <input
                    name="userEmail"
                    onChange={[Function]}
                    placeholder="Email"
                    type="email"
                    value=""
/>,
                ],
                "htmlFor": "userEmail",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email: ",
                  },
                  "ref": null,
                  "rendered": "Email: ",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "userEmail",
                    "onChange": [Function],
                    "placeholder": "Email",
                    "type": "email",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    Password: 
</span>,
                  <input
                    name="userPass1"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
/>,
                ],
                "htmlFor": "userPass1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password: ",
                  },
                  "ref": null,
                  "rendered": "Password: ",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "userPass1",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    Confirm Password: 
</span>,
                  <input
                    name="userPass2"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
/>,
                ],
                "htmlFor": "userPass2",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Confirm Password: ",
                  },
                  "ref": null,
                  "rendered": "Confirm Password: ",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "userPass2",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h3>
                  Sign Up
</h3>,
                "className": "signup-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sign Up",
                },
                "ref": null,
                "rendered": "Sign Up",
                "type": "h3",
              },
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h5
              className="signup-error-msg"
/>,
            "className": "signup-error",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "signup-error-msg",
            },
            "ref": null,
            "rendered": "",
            "type": "h5",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5>
                Already have an account?
</h5>,
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/login"
>
                <button
                                className="signup-btn"
                >
                                Go to Login
                </button>
</NavLink>,
            ],
            "className": "signup-goback",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Already have an account?",
              },
              "ref": null,
              "rendered": "Already have an account?",
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": <button
                  className="signup-btn"
>
                  Go to Login
</button>,
                "to": "/login",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Go to Login",
                  "className": "signup-btn",
                },
                "ref": null,
                "rendered": "Go to Login",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="form-background"
>
          <form
                    className="SignUp-form"
          >
                    <label
                              htmlFor="userEmail"
                    >
                              <span>
                                        Email: 
                              </span>
                              <input
                                        name="userEmail"
                                        onChange={[Function]}
                                        placeholder="Email"
                                        type="email"
                                        value=""
                              />
                    </label>
                    <label
                              htmlFor="userPass1"
                    >
                              <span>
                                        Password: 
                              </span>
                              <input
                                        name="userPass1"
                                        onChange={[Function]}
                                        placeholder="Password"
                                        type="password"
                                        value=""
                              />
                    </label>
                    <label
                              htmlFor="userPass2"
                    >
                              <span>
                                        Confirm Password: 
                              </span>
                              <input
                                        name="userPass2"
                                        onChange={[Function]}
                                        placeholder="Password"
                                        type="password"
                                        value=""
                              />
                    </label>
                    <button
                              className="signup-btn"
                              onClick={[Function]}
                    >
                              <h3>
                                        Sign Up
                              </h3>
                    </button>
          </form>
          <div
                    className="signup-error"
          >
                    <h5
                              className="signup-error-msg"
                    />
          </div>
          <div
                    className="signup-goback"
          >
                    <h5>
                              Already have an account?
                    </h5>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to="/login"
                    >
                              <button
                                        className="signup-btn"
                              >
                                        Go to Login
                              </button>
                    </NavLink>
          </div>
</div>,
        "className": "SignUp",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              className="SignUp-form"
>
              <label
                            htmlFor="userEmail"
              >
                            <span>
                                          Email: 
                            </span>
                            <input
                                          name="userEmail"
                                          onChange={[Function]}
                                          placeholder="Email"
                                          type="email"
                                          value=""
                            />
              </label>
              <label
                            htmlFor="userPass1"
              >
                            <span>
                                          Password: 
                            </span>
                            <input
                                          name="userPass1"
                                          onChange={[Function]}
                                          placeholder="Password"
                                          type="password"
                                          value=""
                            />
              </label>
              <label
                            htmlFor="userPass2"
              >
                            <span>
                                          Confirm Password: 
                            </span>
                            <input
                                          name="userPass2"
                                          onChange={[Function]}
                                          placeholder="Password"
                                          type="password"
                                          value=""
                            />
              </label>
              <button
                            className="signup-btn"
                            onClick={[Function]}
              >
                            <h3>
                                          Sign Up
                            </h3>
              </button>
</form>,
            <div
              className="signup-error"
>
              <h5
                            className="signup-error-msg"
              />
</div>,
            <div
              className="signup-goback"
>
              <h5>
                            Already have an account?
              </h5>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to="/login"
              >
                            <button
                                          className="signup-btn"
                            >
                                          Go to Login
                            </button>
              </NavLink>
</div>,
          ],
          "className": "form-background",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  htmlFor="userEmail"
>
                  <span>
                                    Email: 
                  </span>
                  <input
                                    name="userEmail"
                                    onChange={[Function]}
                                    placeholder="Email"
                                    type="email"
                                    value=""
                  />
</label>,
                <label
                  htmlFor="userPass1"
>
                  <span>
                                    Password: 
                  </span>
                  <input
                                    name="userPass1"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                  />
</label>,
                <label
                  htmlFor="userPass2"
>
                  <span>
                                    Confirm Password: 
                  </span>
                  <input
                                    name="userPass2"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                  />
</label>,
                <button
                  className="signup-btn"
                  onClick={[Function]}
>
                  <h3>
                                    Sign Up
                  </h3>
</button>,
              ],
              "className": "SignUp-form",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Email: 
</span>,
                    <input
                      name="userEmail"
                      onChange={[Function]}
                      placeholder="Email"
                      type="email"
                      value=""
/>,
                  ],
                  "htmlFor": "userEmail",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email: ",
                    },
                    "ref": null,
                    "rendered": "Email: ",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "userEmail",
                      "onChange": [Function],
                      "placeholder": "Email",
                      "type": "email",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Password: 
</span>,
                    <input
                      name="userPass1"
                      onChange={[Function]}
                      placeholder="Password"
                      type="password"
                      value=""
/>,
                  ],
                  "htmlFor": "userPass1",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password: ",
                    },
                    "ref": null,
                    "rendered": "Password: ",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "userPass1",
                      "onChange": [Function],
                      "placeholder": "Password",
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Confirm Password: 
</span>,
                    <input
                      name="userPass2"
                      onChange={[Function]}
                      placeholder="Password"
                      type="password"
                      value=""
/>,
                  ],
                  "htmlFor": "userPass2",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Confirm Password: ",
                    },
                    "ref": null,
                    "rendered": "Confirm Password: ",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "userPass2",
                      "onChange": [Function],
                      "placeholder": "Password",
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h3>
                    Sign Up
</h3>,
                  "className": "signup-btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sign Up",
                  },
                  "ref": null,
                  "rendered": "Sign Up",
                  "type": "h3",
                },
                "type": "button",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h5
                className="signup-error-msg"
/>,
              "className": "signup-error",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "signup-error-msg",
              },
              "ref": null,
              "rendered": "",
              "type": "h5",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h5>
                  Already have an account?
</h5>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  to="/login"
>
                  <button
                                    className="signup-btn"
                  >
                                    Go to Login
                  </button>
</NavLink>,
              ],
              "className": "signup-goback",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Already have an account?",
                },
                "ref": null,
                "rendered": "Already have an account?",
                "type": "h5",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": <button
                    className="signup-btn"
>
                    Go to Login
</button>,
                  "to": "/login",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Go to Login",
                    "className": "signup-btn",
                  },
                  "ref": null,
                  "rendered": "Go to Login",
                  "type": "button",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
